//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace URCP.ServicesRepository.eFileService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EFileServicePerson", Namespace="http://schemas.datacontract.org/2004/07/EFile.Core.DTO")]
    [System.SerializableAttribute()]
    public partial class EFileServicePerson : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdditionalNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BirthDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BirthDateHijriField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuildingNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityTelephoneCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactMobileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactTelephoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DistrictIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DistrictNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpiryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormalIdentityNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullDistrictField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasWaselAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InterContactMobileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InterContactTelephoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IssueAuthorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> IssueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IssuePlaceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LegalStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NationalityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NationalityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POBoxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PersonGUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersonImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PersonTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecondNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelephoneCodeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ThirdNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private URCP.ServicesRepository.eFileService.EFileServiceBlocked UserBlackListedServicesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionalNo {
            get {
                return this.AdditionalNoField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalNoField, value) != true)) {
                    this.AdditionalNoField = value;
                    this.RaisePropertyChanged("AdditionalNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> BirthDate {
            get {
                return this.BirthDateField;
            }
            set {
                if ((this.BirthDateField.Equals(value) != true)) {
                    this.BirthDateField = value;
                    this.RaisePropertyChanged("BirthDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BirthDateHijri {
            get {
                return this.BirthDateHijriField;
            }
            set {
                if ((object.ReferenceEquals(this.BirthDateHijriField, value) != true)) {
                    this.BirthDateHijriField = value;
                    this.RaisePropertyChanged("BirthDateHijri");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuildingNo {
            get {
                return this.BuildingNoField;
            }
            set {
                if ((object.ReferenceEquals(this.BuildingNoField, value) != true)) {
                    this.BuildingNoField = value;
                    this.RaisePropertyChanged("BuildingNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CityID {
            get {
                return this.CityIDField;
            }
            set {
                if ((this.CityIDField.Equals(value) != true)) {
                    this.CityIDField = value;
                    this.RaisePropertyChanged("CityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityName {
            get {
                return this.CityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityNameField, value) != true)) {
                    this.CityNameField = value;
                    this.RaisePropertyChanged("CityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityTelephoneCode {
            get {
                return this.CityTelephoneCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CityTelephoneCodeField, value) != true)) {
                    this.CityTelephoneCodeField = value;
                    this.RaisePropertyChanged("CityTelephoneCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactEmail {
            get {
                return this.ContactEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactEmailField, value) != true)) {
                    this.ContactEmailField = value;
                    this.RaisePropertyChanged("ContactEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactMobile {
            get {
                return this.ContactMobileField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactMobileField, value) != true)) {
                    this.ContactMobileField = value;
                    this.RaisePropertyChanged("ContactMobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactTelephone {
            get {
                return this.ContactTelephoneField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactTelephoneField, value) != true)) {
                    this.ContactTelephoneField = value;
                    this.RaisePropertyChanged("ContactTelephone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryID {
            get {
                return this.CountryIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryIDField, value) != true)) {
                    this.CountryIDField = value;
                    this.RaisePropertyChanged("CountryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryName {
            get {
                return this.CountryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryNameField, value) != true)) {
                    this.CountryNameField = value;
                    this.RaisePropertyChanged("CountryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DistrictID {
            get {
                return this.DistrictIDField;
            }
            set {
                if ((this.DistrictIDField.Equals(value) != true)) {
                    this.DistrictIDField = value;
                    this.RaisePropertyChanged("DistrictID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DistrictName {
            get {
                return this.DistrictNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DistrictNameField, value) != true)) {
                    this.DistrictNameField = value;
                    this.RaisePropertyChanged("DistrictName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpiryDate {
            get {
                return this.ExpiryDateField;
            }
            set {
                if ((this.ExpiryDateField.Equals(value) != true)) {
                    this.ExpiryDateField = value;
                    this.RaisePropertyChanged("ExpiryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormalIdentityNumber {
            get {
                return this.FormalIdentityNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.FormalIdentityNumberField, value) != true)) {
                    this.FormalIdentityNumberField = value;
                    this.RaisePropertyChanged("FormalIdentityNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullDistrict {
            get {
                return this.FullDistrictField;
            }
            set {
                if ((object.ReferenceEquals(this.FullDistrictField, value) != true)) {
                    this.FullDistrictField = value;
                    this.RaisePropertyChanged("FullDistrict");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasWaselAccount {
            get {
                return this.HasWaselAccountField;
            }
            set {
                if ((this.HasWaselAccountField.Equals(value) != true)) {
                    this.HasWaselAccountField = value;
                    this.RaisePropertyChanged("HasWaselAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InterContactMobile {
            get {
                return this.InterContactMobileField;
            }
            set {
                if ((object.ReferenceEquals(this.InterContactMobileField, value) != true)) {
                    this.InterContactMobileField = value;
                    this.RaisePropertyChanged("InterContactMobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InterContactTelephone {
            get {
                return this.InterContactTelephoneField;
            }
            set {
                if ((object.ReferenceEquals(this.InterContactTelephoneField, value) != true)) {
                    this.InterContactTelephoneField = value;
                    this.RaisePropertyChanged("InterContactTelephone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IssueAuthority {
            get {
                return this.IssueAuthorityField;
            }
            set {
                if ((object.ReferenceEquals(this.IssueAuthorityField, value) != true)) {
                    this.IssueAuthorityField = value;
                    this.RaisePropertyChanged("IssueAuthority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> IssueDate {
            get {
                return this.IssueDateField;
            }
            set {
                if ((this.IssueDateField.Equals(value) != true)) {
                    this.IssueDateField = value;
                    this.RaisePropertyChanged("IssueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IssuePlace {
            get {
                return this.IssuePlaceField;
            }
            set {
                if ((object.ReferenceEquals(this.IssuePlaceField, value) != true)) {
                    this.IssuePlaceField = value;
                    this.RaisePropertyChanged("IssuePlace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LegalStatus {
            get {
                return this.LegalStatusField;
            }
            set {
                if ((this.LegalStatusField.Equals(value) != true)) {
                    this.LegalStatusField = value;
                    this.RaisePropertyChanged("LegalStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NationalityID {
            get {
                return this.NationalityIDField;
            }
            set {
                if ((object.ReferenceEquals(this.NationalityIDField, value) != true)) {
                    this.NationalityIDField = value;
                    this.RaisePropertyChanged("NationalityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NationalityName {
            get {
                return this.NationalityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NationalityNameField, value) != true)) {
                    this.NationalityNameField = value;
                    this.RaisePropertyChanged("NationalityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POBox {
            get {
                return this.POBoxField;
            }
            set {
                if ((object.ReferenceEquals(this.POBoxField, value) != true)) {
                    this.POBoxField = value;
                    this.RaisePropertyChanged("POBox");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PersonGUID {
            get {
                return this.PersonGUIDField;
            }
            set {
                if ((this.PersonGUIDField.Equals(value) != true)) {
                    this.PersonGUIDField = value;
                    this.RaisePropertyChanged("PersonGUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PersonImage {
            get {
                return this.PersonImageField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonImageField, value) != true)) {
                    this.PersonImageField = value;
                    this.RaisePropertyChanged("PersonImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PersonType {
            get {
                return this.PersonTypeField;
            }
            set {
                if ((this.PersonTypeField.Equals(value) != true)) {
                    this.PersonTypeField = value;
                    this.RaisePropertyChanged("PersonType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostalCode {
            get {
                return this.PostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeField, value) != true)) {
                    this.PostalCodeField = value;
                    this.RaisePropertyChanged("PostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecondName {
            get {
                return this.SecondNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SecondNameField, value) != true)) {
                    this.SecondNameField = value;
                    this.RaisePropertyChanged("SecondName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StreetName {
            get {
                return this.StreetNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetNameField, value) != true)) {
                    this.StreetNameField = value;
                    this.RaisePropertyChanged("StreetName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TelephoneCodeID {
            get {
                return this.TelephoneCodeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TelephoneCodeIDField, value) != true)) {
                    this.TelephoneCodeIDField = value;
                    this.RaisePropertyChanged("TelephoneCodeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ThirdName {
            get {
                return this.ThirdNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ThirdNameField, value) != true)) {
                    this.ThirdNameField = value;
                    this.RaisePropertyChanged("ThirdName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UnitNo {
            get {
                return this.UnitNoField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitNoField, value) != true)) {
                    this.UnitNoField = value;
                    this.RaisePropertyChanged("UnitNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public URCP.ServicesRepository.eFileService.EFileServiceBlocked UserBlackListedServices {
            get {
                return this.UserBlackListedServicesField;
            }
            set {
                if ((object.ReferenceEquals(this.UserBlackListedServicesField, value) != true)) {
                    this.UserBlackListedServicesField = value;
                    this.RaisePropertyChanged("UserBlackListedServices");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EFileServiceBlocked", Namespace="http://schemas.datacontract.org/2004/07/EFile.Core.DTO")]
    [System.SerializableAttribute()]
    public partial class EFileServiceBlocked : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EFileServiceException", Namespace="http://schemas.datacontract.org/2004/07/EFile.WebUI.WServices")]
    [System.SerializableAttribute()]
    public partial class EFileServiceException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionArField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageArField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescriptionAr {
            get {
                return this.DescriptionArField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionArField, value) != true)) {
                    this.DescriptionArField = value;
                    this.RaisePropertyChanged("DescriptionAr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageAr {
            get {
                return this.MessageArField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageArField, value) != true)) {
                    this.MessageArField = value;
                    this.RaisePropertyChanged("MessageAr");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EFileServiceContactOfficer", Namespace="http://schemas.datacontract.org/2004/07/EFile.Core.DTO")]
    [System.SerializableAttribute()]
    public partial class EFileServiceContactOfficer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdditionalNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BirthDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BirthDateHijriField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuildingNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityTelephoneCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactMobileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.KeyValuePair<string, string> ContactOfficerCRsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactTelephoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DistrictNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpiryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormalIdentityNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasWaselAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InterContactMobileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InterContactTelephoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IssueAuthorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> IssueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IssuePlaceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LegalStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POBoxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PersonGUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersonImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecondNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelephoneCodeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ThirdNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private URCP.ServicesRepository.eFileService.EFileServiceBlocked UserBlackListedServicesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionalNo {
            get {
                return this.AdditionalNoField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalNoField, value) != true)) {
                    this.AdditionalNoField = value;
                    this.RaisePropertyChanged("AdditionalNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> BirthDate {
            get {
                return this.BirthDateField;
            }
            set {
                if ((this.BirthDateField.Equals(value) != true)) {
                    this.BirthDateField = value;
                    this.RaisePropertyChanged("BirthDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BirthDateHijri {
            get {
                return this.BirthDateHijriField;
            }
            set {
                if ((object.ReferenceEquals(this.BirthDateHijriField, value) != true)) {
                    this.BirthDateHijriField = value;
                    this.RaisePropertyChanged("BirthDateHijri");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuildingNo {
            get {
                return this.BuildingNoField;
            }
            set {
                if ((object.ReferenceEquals(this.BuildingNoField, value) != true)) {
                    this.BuildingNoField = value;
                    this.RaisePropertyChanged("BuildingNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityName {
            get {
                return this.CityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityNameField, value) != true)) {
                    this.CityNameField = value;
                    this.RaisePropertyChanged("CityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityTelephoneCode {
            get {
                return this.CityTelephoneCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CityTelephoneCodeField, value) != true)) {
                    this.CityTelephoneCodeField = value;
                    this.RaisePropertyChanged("CityTelephoneCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactEmail {
            get {
                return this.ContactEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactEmailField, value) != true)) {
                    this.ContactEmailField = value;
                    this.RaisePropertyChanged("ContactEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactMobile {
            get {
                return this.ContactMobileField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactMobileField, value) != true)) {
                    this.ContactMobileField = value;
                    this.RaisePropertyChanged("ContactMobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.KeyValuePair<string, string> ContactOfficerCRs {
            get {
                return this.ContactOfficerCRsField;
            }
            set {
                if ((this.ContactOfficerCRsField.Equals(value) != true)) {
                    this.ContactOfficerCRsField = value;
                    this.RaisePropertyChanged("ContactOfficerCRs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactTelephone {
            get {
                return this.ContactTelephoneField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactTelephoneField, value) != true)) {
                    this.ContactTelephoneField = value;
                    this.RaisePropertyChanged("ContactTelephone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryName {
            get {
                return this.CountryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryNameField, value) != true)) {
                    this.CountryNameField = value;
                    this.RaisePropertyChanged("CountryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DistrictName {
            get {
                return this.DistrictNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DistrictNameField, value) != true)) {
                    this.DistrictNameField = value;
                    this.RaisePropertyChanged("DistrictName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpiryDate {
            get {
                return this.ExpiryDateField;
            }
            set {
                if ((this.ExpiryDateField.Equals(value) != true)) {
                    this.ExpiryDateField = value;
                    this.RaisePropertyChanged("ExpiryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormalIdentityNumber {
            get {
                return this.FormalIdentityNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.FormalIdentityNumberField, value) != true)) {
                    this.FormalIdentityNumberField = value;
                    this.RaisePropertyChanged("FormalIdentityNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasWaselAccount {
            get {
                return this.HasWaselAccountField;
            }
            set {
                if ((this.HasWaselAccountField.Equals(value) != true)) {
                    this.HasWaselAccountField = value;
                    this.RaisePropertyChanged("HasWaselAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InterContactMobile {
            get {
                return this.InterContactMobileField;
            }
            set {
                if ((object.ReferenceEquals(this.InterContactMobileField, value) != true)) {
                    this.InterContactMobileField = value;
                    this.RaisePropertyChanged("InterContactMobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InterContactTelephone {
            get {
                return this.InterContactTelephoneField;
            }
            set {
                if ((object.ReferenceEquals(this.InterContactTelephoneField, value) != true)) {
                    this.InterContactTelephoneField = value;
                    this.RaisePropertyChanged("InterContactTelephone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IssueAuthority {
            get {
                return this.IssueAuthorityField;
            }
            set {
                if ((object.ReferenceEquals(this.IssueAuthorityField, value) != true)) {
                    this.IssueAuthorityField = value;
                    this.RaisePropertyChanged("IssueAuthority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> IssueDate {
            get {
                return this.IssueDateField;
            }
            set {
                if ((this.IssueDateField.Equals(value) != true)) {
                    this.IssueDateField = value;
                    this.RaisePropertyChanged("IssueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IssuePlace {
            get {
                return this.IssuePlaceField;
            }
            set {
                if ((object.ReferenceEquals(this.IssuePlaceField, value) != true)) {
                    this.IssuePlaceField = value;
                    this.RaisePropertyChanged("IssuePlace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LegalStatus {
            get {
                return this.LegalStatusField;
            }
            set {
                if ((this.LegalStatusField.Equals(value) != true)) {
                    this.LegalStatusField = value;
                    this.RaisePropertyChanged("LegalStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POBox {
            get {
                return this.POBoxField;
            }
            set {
                if ((object.ReferenceEquals(this.POBoxField, value) != true)) {
                    this.POBoxField = value;
                    this.RaisePropertyChanged("POBox");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PersonGUID {
            get {
                return this.PersonGUIDField;
            }
            set {
                if ((this.PersonGUIDField.Equals(value) != true)) {
                    this.PersonGUIDField = value;
                    this.RaisePropertyChanged("PersonGUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PersonImage {
            get {
                return this.PersonImageField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonImageField, value) != true)) {
                    this.PersonImageField = value;
                    this.RaisePropertyChanged("PersonImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostalCode {
            get {
                return this.PostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeField, value) != true)) {
                    this.PostalCodeField = value;
                    this.RaisePropertyChanged("PostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecondName {
            get {
                return this.SecondNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SecondNameField, value) != true)) {
                    this.SecondNameField = value;
                    this.RaisePropertyChanged("SecondName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StreetName {
            get {
                return this.StreetNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetNameField, value) != true)) {
                    this.StreetNameField = value;
                    this.RaisePropertyChanged("StreetName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TelephoneCodeID {
            get {
                return this.TelephoneCodeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TelephoneCodeIDField, value) != true)) {
                    this.TelephoneCodeIDField = value;
                    this.RaisePropertyChanged("TelephoneCodeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ThirdName {
            get {
                return this.ThirdNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ThirdNameField, value) != true)) {
                    this.ThirdNameField = value;
                    this.RaisePropertyChanged("ThirdName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UnitNo {
            get {
                return this.UnitNoField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitNoField, value) != true)) {
                    this.UnitNoField = value;
                    this.RaisePropertyChanged("UnitNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public URCP.ServicesRepository.eFileService.EFileServiceBlocked UserBlackListedServices {
            get {
                return this.UserBlackListedServicesField;
            }
            set {
                if ((object.ReferenceEquals(this.UserBlackListedServicesField, value) != true)) {
                    this.UserBlackListedServicesField = value;
                    this.RaisePropertyChanged("UserBlackListedServices");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EFileServiceAddress", Namespace="http://schemas.datacontract.org/2004/07/EFile.Core.DTO")]
    [System.SerializableAttribute()]
    public partial class EFileServiceAddress : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdditionalNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuildingNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsWaselField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NeighborhoodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NeighborhoodIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POBoxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionalNumber {
            get {
                return this.AdditionalNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalNumberField, value) != true)) {
                    this.AdditionalNumberField = value;
                    this.RaisePropertyChanged("AdditionalNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuildingNumber {
            get {
                return this.BuildingNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.BuildingNumberField, value) != true)) {
                    this.BuildingNumberField = value;
                    this.RaisePropertyChanged("BuildingNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CityID {
            get {
                return this.CityIDField;
            }
            set {
                if ((this.CityIDField.Equals(value) != true)) {
                    this.CityIDField = value;
                    this.RaisePropertyChanged("CityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryID {
            get {
                return this.CountryIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryIDField, value) != true)) {
                    this.CountryIDField = value;
                    this.RaisePropertyChanged("CountryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsWasel {
            get {
                return this.IsWaselField;
            }
            set {
                if ((this.IsWaselField.Equals(value) != true)) {
                    this.IsWaselField = value;
                    this.RaisePropertyChanged("IsWasel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Neighborhood {
            get {
                return this.NeighborhoodField;
            }
            set {
                if ((object.ReferenceEquals(this.NeighborhoodField, value) != true)) {
                    this.NeighborhoodField = value;
                    this.RaisePropertyChanged("Neighborhood");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NeighborhoodID {
            get {
                return this.NeighborhoodIDField;
            }
            set {
                if ((this.NeighborhoodIDField.Equals(value) != true)) {
                    this.NeighborhoodIDField = value;
                    this.RaisePropertyChanged("NeighborhoodID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POBox {
            get {
                return this.POBoxField;
            }
            set {
                if ((object.ReferenceEquals(this.POBoxField, value) != true)) {
                    this.POBoxField = value;
                    this.RaisePropertyChanged("POBox");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street {
            get {
                return this.StreetField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetField, value) != true)) {
                    this.StreetField = value;
                    this.RaisePropertyChanged("Street");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UnitNumber {
            get {
                return this.UnitNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitNumberField, value) != true)) {
                    this.UnitNumberField = value;
                    this.RaisePropertyChanged("UnitNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipCode {
            get {
                return this.ZipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipCodeField, value) != true)) {
                    this.ZipCodeField = value;
                    this.RaisePropertyChanged("ZipCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccessTokenModel", Namespace="http://schemas.datacontract.org/2004/07/EFile.WebUI.Models")]
    [System.SerializableAttribute()]
    public partial class AccessTokenModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserTokenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientToken {
            get {
                return this.ClientTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientTokenField, value) != true)) {
                    this.ClientTokenField = value;
                    this.RaisePropertyChanged("ClientToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserToken {
            get {
                return this.UserTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.UserTokenField, value) != true)) {
                    this.UserTokenField = value;
                    this.RaisePropertyChanged("UserToken");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EFileServicePersonProfile", Namespace="http://schemas.datacontract.org/2004/07/EFile.Core.DTO")]
    [System.SerializableAttribute()]
    public partial class EFileServicePersonProfile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Base64ImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EducationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Base64Image {
            get {
                return this.Base64ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.Base64ImageField, value) != true)) {
                    this.Base64ImageField = value;
                    this.RaisePropertyChanged("Base64Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContentType {
            get {
                return this.ContentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentTypeField, value) != true)) {
                    this.ContentTypeField = value;
                    this.RaisePropertyChanged("ContentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryID {
            get {
                return this.CountryIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryIDField, value) != true)) {
                    this.CountryIDField = value;
                    this.RaisePropertyChanged("CountryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EducationID {
            get {
                return this.EducationIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EducationIDField, value) != true)) {
                    this.EducationIDField = value;
                    this.RaisePropertyChanged("EducationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mobile {
            get {
                return this.MobileField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileField, value) != true)) {
                    this.MobileField = value;
                    this.RaisePropertyChanged("Mobile");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EFileServicePersonAddress", Namespace="http://schemas.datacontract.org/2004/07/EFile.Core.DTO")]
    [System.SerializableAttribute()]
    public partial class EFileServicePersonAddress : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdditionalNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuildingNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DistrictIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> HasWaselAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LongtitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POBoxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitNoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionalNo {
            get {
                return this.AdditionalNoField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalNoField, value) != true)) {
                    this.AdditionalNoField = value;
                    this.RaisePropertyChanged("AdditionalNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuildingNo {
            get {
                return this.BuildingNoField;
            }
            set {
                if ((object.ReferenceEquals(this.BuildingNoField, value) != true)) {
                    this.BuildingNoField = value;
                    this.RaisePropertyChanged("BuildingNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityID {
            get {
                return this.CityIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CityIDField, value) != true)) {
                    this.CityIDField = value;
                    this.RaisePropertyChanged("CityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryID {
            get {
                return this.CountryIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryIDField, value) != true)) {
                    this.CountryIDField = value;
                    this.RaisePropertyChanged("CountryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DistrictID {
            get {
                return this.DistrictIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DistrictIDField, value) != true)) {
                    this.DistrictIDField = value;
                    this.RaisePropertyChanged("DistrictID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> HasWaselAccount {
            get {
                return this.HasWaselAccountField;
            }
            set {
                if ((this.HasWaselAccountField.Equals(value) != true)) {
                    this.HasWaselAccountField = value;
                    this.RaisePropertyChanged("HasWaselAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LatitudeField, value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Longtitude {
            get {
                return this.LongtitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LongtitudeField, value) != true)) {
                    this.LongtitudeField = value;
                    this.RaisePropertyChanged("Longtitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POBox {
            get {
                return this.POBoxField;
            }
            set {
                if ((object.ReferenceEquals(this.POBoxField, value) != true)) {
                    this.POBoxField = value;
                    this.RaisePropertyChanged("POBox");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostalCode {
            get {
                return this.PostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeField, value) != true)) {
                    this.PostalCodeField = value;
                    this.RaisePropertyChanged("PostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StreetName {
            get {
                return this.StreetNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetNameField, value) != true)) {
                    this.StreetNameField = value;
                    this.RaisePropertyChanged("StreetName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UnitNo {
            get {
                return this.UnitNoField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitNoField, value) != true)) {
                    this.UnitNoField = value;
                    this.RaisePropertyChanged("UnitNo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EFileServiceDelegated", Namespace="http://schemas.datacontract.org/2004/07/EFile.Core.DTO")]
    [System.SerializableAttribute()]
    public partial class EFileServiceDelegated : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DelegateTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DelegateType {
            get {
                return this.DelegateTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DelegateTypeField, value) != true)) {
                    this.DelegateTypeField = value;
                    this.RaisePropertyChanged("DelegateType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasReference {
            get {
                return this.HasReferenceField;
            }
            set {
                if ((this.HasReferenceField.Equals(value) != true)) {
                    this.HasReferenceField = value;
                    this.RaisePropertyChanged("HasReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReferenceNumber {
            get {
                return this.ReferenceNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceNumberField, value) != true)) {
                    this.ReferenceNumberField = value;
                    this.RaisePropertyChanged("ReferenceNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleID {
            get {
                return this.RoleIDField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleIDField, value) != true)) {
                    this.RoleIDField = value;
                    this.RaisePropertyChanged("RoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleName {
            get {
                return this.RoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleNameField, value) != true)) {
                    this.RoleNameField = value;
                    this.RaisePropertyChanged("RoleName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EFileServiceDelegation", Namespace="http://schemas.datacontract.org/2004/07/EFile.Core.DTO")]
    [System.SerializableAttribute()]
    public partial class EFileServiceDelegation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<URCP.ServicesRepository.eFileService.EFileServiceDelegateInfo> BeneficiariesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<URCP.ServicesRepository.eFileService.EFileServiceDelegateInfo> DelegatorsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<URCP.ServicesRepository.eFileService.EFileServiceDelegateInfo> Beneficiaries {
            get {
                return this.BeneficiariesField;
            }
            set {
                if ((object.ReferenceEquals(this.BeneficiariesField, value) != true)) {
                    this.BeneficiariesField = value;
                    this.RaisePropertyChanged("Beneficiaries");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<URCP.ServicesRepository.eFileService.EFileServiceDelegateInfo> Delegators {
            get {
                return this.DelegatorsField;
            }
            set {
                if ((object.ReferenceEquals(this.DelegatorsField, value) != true)) {
                    this.DelegatorsField = value;
                    this.RaisePropertyChanged("Delegators");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EFileServiceDelegateInfo", Namespace="http://schemas.datacontract.org/2004/07/EFile.Core.DTO")]
    [System.SerializableAttribute()]
    public partial class EFileServiceDelegateInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DelegateTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DelegateType {
            get {
                return this.DelegateTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DelegateTypeField, value) != true)) {
                    this.DelegateTypeField = value;
                    this.RaisePropertyChanged("DelegateType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NID {
            get {
                return this.NIDField;
            }
            set {
                if ((object.ReferenceEquals(this.NIDField, value) != true)) {
                    this.NIDField = value;
                    this.RaisePropertyChanged("NID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EFileServiceDelegationDetails", Namespace="http://schemas.datacontract.org/2004/07/EFile.Core.DTO")]
    [System.SerializableAttribute()]
    public partial class EFileServiceDelegationDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BeneficiaryNIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BeneficiaryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<URCP.ServicesRepository.eFileService.EFileServiceDelegated> DelegatedReferencesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DelegatorNIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DelegatorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ExpiryDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BeneficiaryNID {
            get {
                return this.BeneficiaryNIDField;
            }
            set {
                if ((object.ReferenceEquals(this.BeneficiaryNIDField, value) != true)) {
                    this.BeneficiaryNIDField = value;
                    this.RaisePropertyChanged("BeneficiaryNID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BeneficiaryName {
            get {
                return this.BeneficiaryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BeneficiaryNameField, value) != true)) {
                    this.BeneficiaryNameField = value;
                    this.RaisePropertyChanged("BeneficiaryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<URCP.ServicesRepository.eFileService.EFileServiceDelegated> DelegatedReferences {
            get {
                return this.DelegatedReferencesField;
            }
            set {
                if ((object.ReferenceEquals(this.DelegatedReferencesField, value) != true)) {
                    this.DelegatedReferencesField = value;
                    this.RaisePropertyChanged("DelegatedReferences");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DelegatorNID {
            get {
                return this.DelegatorNIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DelegatorNIDField, value) != true)) {
                    this.DelegatorNIDField = value;
                    this.RaisePropertyChanged("DelegatorNID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DelegatorName {
            get {
                return this.DelegatorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DelegatorNameField, value) != true)) {
                    this.DelegatorNameField = value;
                    this.RaisePropertyChanged("DelegatorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ExpiryDate {
            get {
                return this.ExpiryDateField;
            }
            set {
                if ((this.ExpiryDateField.Equals(value) != true)) {
                    this.ExpiryDateField = value;
                    this.RaisePropertyChanged("ExpiryDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EFileServiceBlackListed", Namespace="http://schemas.datacontract.org/2004/07/EFile.Core.DTO")]
    [System.SerializableAttribute()]
    public partial class EFileServiceBlackListed : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasReference {
            get {
                return this.HasReferenceField;
            }
            set {
                if ((this.HasReferenceField.Equals(value) != true)) {
                    this.HasReferenceField = value;
                    this.RaisePropertyChanged("HasReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReferenceNumber {
            get {
                return this.ReferenceNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceNumberField, value) != true)) {
                    this.ReferenceNumberField = value;
                    this.RaisePropertyChanged("ReferenceNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleID {
            get {
                return this.RoleIDField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleIDField, value) != true)) {
                    this.RoleIDField = value;
                    this.RaisePropertyChanged("RoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleName {
            get {
                return this.RoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleNameField, value) != true)) {
                    this.RoleNameField = value;
                    this.RaisePropertyChanged("RoleName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EFileServiceRole", Namespace="http://schemas.datacontract.org/2004/07/EFile.Core.DTO")]
    [System.SerializableAttribute()]
    public partial class EFileServiceRole : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DelegateTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DelegateType {
            get {
                return this.DelegateTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DelegateTypeField, value) != true)) {
                    this.DelegateTypeField = value;
                    this.RaisePropertyChanged("DelegateType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasReference {
            get {
                return this.HasReferenceField;
            }
            set {
                if ((this.HasReferenceField.Equals(value) != true)) {
                    this.HasReferenceField = value;
                    this.RaisePropertyChanged("HasReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleID {
            get {
                return this.RoleIDField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleIDField, value) != true)) {
                    this.RoleIDField = value;
                    this.RaisePropertyChanged("RoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleName {
            get {
                return this.RoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleNameField, value) != true)) {
                    this.RoleNameField = value;
                    this.RaisePropertyChanged("RoleName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EFileServiceCountry", Namespace="http://schemas.datacontract.org/2004/07/EFile.Core.DTO")]
    [System.SerializableAttribute()]
    public partial class EFileServiceCountry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AreaCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AreaCode {
            get {
                return this.AreaCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaCodeField, value) != true)) {
                    this.AreaCodeField = value;
                    this.RaisePropertyChanged("AreaCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryID {
            get {
                return this.CountryIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryIDField, value) != true)) {
                    this.CountryIDField = value;
                    this.RaisePropertyChanged("CountryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryName {
            get {
                return this.CountryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryNameField, value) != true)) {
                    this.CountryNameField = value;
                    this.RaisePropertyChanged("CountryName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EFileServiceCity", Namespace="http://schemas.datacontract.org/2004/07/EFile.Core.DTO")]
    [System.SerializableAttribute()]
    public partial class EFileServiceCity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CityID {
            get {
                return this.CityIDField;
            }
            set {
                if ((this.CityIDField.Equals(value) != true)) {
                    this.CityIDField = value;
                    this.RaisePropertyChanged("CityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityName {
            get {
                return this.CityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityNameField, value) != true)) {
                    this.CityNameField = value;
                    this.RaisePropertyChanged("CityName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EFileServiceDistrict", Namespace="http://schemas.datacontract.org/2004/07/EFile.Core.DTO")]
    [System.SerializableAttribute()]
    public partial class EFileServiceDistrict : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DistrictIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DistrictNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DistrictID {
            get {
                return this.DistrictIDField;
            }
            set {
                if ((this.DistrictIDField.Equals(value) != true)) {
                    this.DistrictIDField = value;
                    this.RaisePropertyChanged("DistrictID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DistrictName {
            get {
                return this.DistrictNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DistrictNameField, value) != true)) {
                    this.DistrictNameField = value;
                    this.RaisePropertyChanged("DistrictName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PasswordRecoveryWay", Namespace="http://schemas.datacontract.org/2004/07/EFile.WebUI.Helpers")]
    public enum PasswordRecoveryWay : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Email = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SMS = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChangePasswordModel", Namespace="http://schemas.datacontract.org/2004/07/EFile.WebUI.Models")]
    [System.SerializableAttribute()]
    public partial class ChangePasswordModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfirmPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OldPasswordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfirmPassword {
            get {
                return this.ConfirmPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfirmPasswordField, value) != true)) {
                    this.ConfirmPasswordField = value;
                    this.RaisePropertyChanged("ConfirmPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewPassword {
            get {
                return this.NewPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.NewPasswordField, value) != true)) {
                    this.NewPasswordField = value;
                    this.RaisePropertyChanged("NewPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OldPassword {
            get {
                return this.OldPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.OldPasswordField, value) != true)) {
                    this.OldPasswordField = value;
                    this.RaisePropertyChanged("OldPassword");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="eFileService.IEFileService")]
    public interface IEFileService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/GetPersonByUserIDandClientID", ReplyAction="http://tempuri.org/IEFileService/GetPersonByUserIDandClientIDResponse")]
        URCP.ServicesRepository.eFileService.EFileServicePerson GetPersonByUserIDandClientID(string userId, string clientId, string clientPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/GetPersonByUserIDandClientID", ReplyAction="http://tempuri.org/IEFileService/GetPersonByUserIDandClientIDResponse")]
        System.Threading.Tasks.Task<URCP.ServicesRepository.eFileService.EFileServicePerson> GetPersonByUserIDandClientIDAsync(string userId, string clientId, string clientPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/GetPersonByUserID", ReplyAction="http://tempuri.org/IEFileService/GetPersonByUserIDResponse")]
        URCP.ServicesRepository.eFileService.EFileServicePerson GetPersonByUserID(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/GetPersonByUserID", ReplyAction="http://tempuri.org/IEFileService/GetPersonByUserIDResponse")]
        System.Threading.Tasks.Task<URCP.ServicesRepository.eFileService.EFileServicePerson> GetPersonByUserIDAsync(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/GetPersonByNID", ReplyAction="http://tempuri.org/IEFileService/GetPersonByNIDResponse")]
        URCP.ServicesRepository.eFileService.EFileServicePerson GetPersonByNID(string nid, string clientId, string clientPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/GetPersonByNID", ReplyAction="http://tempuri.org/IEFileService/GetPersonByNIDResponse")]
        System.Threading.Tasks.Task<URCP.ServicesRepository.eFileService.EFileServicePerson> GetPersonByNIDAsync(string nid, string clientId, string clientPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/GetPersonByFIN", ReplyAction="http://tempuri.org/IEFileService/GetPersonByFINResponse")]
        URCP.ServicesRepository.eFileService.EFileServicePerson GetPersonByFIN(string nid, string clientId, string clientPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/GetPersonByFIN", ReplyAction="http://tempuri.org/IEFileService/GetPersonByFINResponse")]
        System.Threading.Tasks.Task<URCP.ServicesRepository.eFileService.EFileServicePerson> GetPersonByFINAsync(string nid, string clientId, string clientPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/CheckPersonStatus", ReplyAction="http://tempuri.org/IEFileService/CheckPersonStatusResponse")]
        URCP.ServicesRepository.eFileService.EFileServicePerson CheckPersonStatus(string nid, string clientId, string clientPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/CheckPersonStatus", ReplyAction="http://tempuri.org/IEFileService/CheckPersonStatusResponse")]
        System.Threading.Tasks.Task<URCP.ServicesRepository.eFileService.EFileServicePerson> CheckPersonStatusAsync(string nid, string clientId, string clientPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/GetPerson", ReplyAction="http://tempuri.org/IEFileService/GetPersonResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(URCP.ServicesRepository.eFileService.EFileServiceException), Action="http://tempuri.org/IEFileService/GetPersonEFileServiceExceptionFault", Name="EFileServiceException", Namespace="http://schemas.datacontract.org/2004/07/EFile.WebUI.WServices")]
        URCP.ServicesRepository.eFileService.EFileServicePerson GetPerson(string nid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/GetPerson", ReplyAction="http://tempuri.org/IEFileService/GetPersonResponse")]
        System.Threading.Tasks.Task<URCP.ServicesRepository.eFileService.EFileServicePerson> GetPersonAsync(string nid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/GetContactOfficerInfo", ReplyAction="http://tempuri.org/IEFileService/GetContactOfficerInfoResponse")]
        URCP.ServicesRepository.eFileService.EFileServiceContactOfficer GetContactOfficerInfo(string userAccessToken, string clientId, string clientPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/GetContactOfficerInfo", ReplyAction="http://tempuri.org/IEFileService/GetContactOfficerInfoResponse")]
        System.Threading.Tasks.Task<URCP.ServicesRepository.eFileService.EFileServiceContactOfficer> GetContactOfficerInfoAsync(string userAccessToken, string clientId, string clientPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/GetPersonAddressByNID", ReplyAction="http://tempuri.org/IEFileService/GetPersonAddressByNIDResponse")]
        URCP.ServicesRepository.eFileService.EFileServiceAddress GetPersonAddressByNID(string nid, string clientId, string clientPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/GetPersonAddressByNID", ReplyAction="http://tempuri.org/IEFileService/GetPersonAddressByNIDResponse")]
        System.Threading.Tasks.Task<URCP.ServicesRepository.eFileService.EFileServiceAddress> GetPersonAddressByNIDAsync(string nid, string clientId, string clientPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/Authenticated", ReplyAction="http://tempuri.org/IEFileService/AuthenticatedResponse")]
        URCP.ServicesRepository.eFileService.AccessTokenModel Authenticated(string clientId, string clientPassword, string NID, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/Authenticated", ReplyAction="http://tempuri.org/IEFileService/AuthenticatedResponse")]
        System.Threading.Tasks.Task<URCP.ServicesRepository.eFileService.AccessTokenModel> AuthenticatedAsync(string clientId, string clientPassword, string NID, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/GetUsernameByAccessToken", ReplyAction="http://tempuri.org/IEFileService/GetUsernameByAccessTokenResponse")]
        string GetUsernameByAccessToken(string userAccessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/GetUsernameByAccessToken", ReplyAction="http://tempuri.org/IEFileService/GetUsernameByAccessTokenResponse")]
        System.Threading.Tasks.Task<string> GetUsernameByAccessTokenAsync(string userAccessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/CheckToken", ReplyAction="http://tempuri.org/IEFileService/CheckTokenResponse")]
        bool CheckToken(URCP.ServicesRepository.eFileService.AccessTokenModel accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/CheckToken", ReplyAction="http://tempuri.org/IEFileService/CheckTokenResponse")]
        System.Threading.Tasks.Task<bool> CheckTokenAsync(URCP.ServicesRepository.eFileService.AccessTokenModel accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/CheckUserToken", ReplyAction="http://tempuri.org/IEFileService/CheckUserTokenResponse")]
        bool CheckUserToken(string userAccessToken, string clientId, string clientPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/CheckUserToken", ReplyAction="http://tempuri.org/IEFileService/CheckUserTokenResponse")]
        System.Threading.Tasks.Task<bool> CheckUserTokenAsync(string userAccessToken, string clientId, string clientPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/IsAuthenticated", ReplyAction="http://tempuri.org/IEFileService/IsAuthenticatedResponse")]
        bool IsAuthenticated(string userAccessToken, string clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/IsAuthenticated", ReplyAction="http://tempuri.org/IEFileService/IsAuthenticatedResponse")]
        System.Threading.Tasks.Task<bool> IsAuthenticatedAsync(string userAccessToken, string clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/UpdatePersonInfo", ReplyAction="http://tempuri.org/IEFileService/UpdatePersonInfoResponse")]
        bool UpdatePersonInfo(URCP.ServicesRepository.eFileService.AccessTokenModel accessToken, URCP.ServicesRepository.eFileService.EFileServicePersonProfile personProfile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/UpdatePersonInfo", ReplyAction="http://tempuri.org/IEFileService/UpdatePersonInfoResponse")]
        System.Threading.Tasks.Task<bool> UpdatePersonInfoAsync(URCP.ServicesRepository.eFileService.AccessTokenModel accessToken, URCP.ServicesRepository.eFileService.EFileServicePersonProfile personProfile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/UpdatePersonAddress", ReplyAction="http://tempuri.org/IEFileService/UpdatePersonAddressResponse")]
        bool UpdatePersonAddress(URCP.ServicesRepository.eFileService.AccessTokenModel accessToken, URCP.ServicesRepository.eFileService.EFileServicePersonAddress personAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/UpdatePersonAddress", ReplyAction="http://tempuri.org/IEFileService/UpdatePersonAddressResponse")]
        System.Threading.Tasks.Task<bool> UpdatePersonAddressAsync(URCP.ServicesRepository.eFileService.AccessTokenModel accessToken, URCP.ServicesRepository.eFileService.EFileServicePersonAddress personAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/GetDelegatedReferencesByServiceID", ReplyAction="http://tempuri.org/IEFileService/GetDelegatedReferencesByServiceIDResponse")]
        System.Collections.Generic.List<URCP.ServicesRepository.eFileService.EFileServiceDelegated> GetDelegatedReferencesByServiceID(string nid, string clientId, string childClientId, string serviceId, string crNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/GetDelegatedReferencesByServiceID", ReplyAction="http://tempuri.org/IEFileService/GetDelegatedReferencesByServiceIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<URCP.ServicesRepository.eFileService.EFileServiceDelegated>> GetDelegatedReferencesByServiceIDAsync(string nid, string clientId, string childClientId, string serviceId, string crNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/GetDelegatedReferences", ReplyAction="http://tempuri.org/IEFileService/GetDelegatedReferencesResponse")]
        System.Collections.Generic.List<URCP.ServicesRepository.eFileService.EFileServiceDelegated> GetDelegatedReferences(string nid, string clientId, string clientSecret, string delegatorNID, string crNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/GetDelegatedReferences", ReplyAction="http://tempuri.org/IEFileService/GetDelegatedReferencesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<URCP.ServicesRepository.eFileService.EFileServiceDelegated>> GetDelegatedReferencesAsync(string nid, string clientId, string clientSecret, string delegatorNID, string crNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/GetAllDelegationInfo", ReplyAction="http://tempuri.org/IEFileService/GetAllDelegationInfoResponse")]
        URCP.ServicesRepository.eFileService.EFileServiceDelegation GetAllDelegationInfo(string nid, string clientId, string clientSecret);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/GetAllDelegationInfo", ReplyAction="http://tempuri.org/IEFileService/GetAllDelegationInfoResponse")]
        System.Threading.Tasks.Task<URCP.ServicesRepository.eFileService.EFileServiceDelegation> GetAllDelegationInfoAsync(string nid, string clientId, string clientSecret);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/GetAllDelegationInfoByCrNumber", ReplyAction="http://tempuri.org/IEFileService/GetAllDelegationInfoByCrNumberResponse")]
        URCP.ServicesRepository.eFileService.EFileServiceDelegation GetAllDelegationInfoByCrNumber(string nid, string clientId, string clientSecret, string crNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/GetAllDelegationInfoByCrNumber", ReplyAction="http://tempuri.org/IEFileService/GetAllDelegationInfoByCrNumberResponse")]
        System.Threading.Tasks.Task<URCP.ServicesRepository.eFileService.EFileServiceDelegation> GetAllDelegationInfoByCrNumberAsync(string nid, string clientId, string clientSecret, string crNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/GetListOfAllDelegationsInfo", ReplyAction="http://tempuri.org/IEFileService/GetListOfAllDelegationsInfoResponse")]
        System.Collections.Generic.List<URCP.ServicesRepository.eFileService.EFileServiceDelegationDetails> GetListOfAllDelegationsInfo(string nid, string clientId, string clientSecret);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/GetListOfAllDelegationsInfo", ReplyAction="http://tempuri.org/IEFileService/GetListOfAllDelegationsInfoResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<URCP.ServicesRepository.eFileService.EFileServiceDelegationDetails>> GetListOfAllDelegationsInfoAsync(string nid, string clientId, string clientSecret);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/GetAllBeneficiariesByCrNumber", ReplyAction="http://tempuri.org/IEFileService/GetAllBeneficiariesByCrNumberResponse")]
        System.Collections.Generic.List<URCP.ServicesRepository.eFileService.EFileServiceDelegationDetails> GetAllBeneficiariesByCrNumber(string crNumber, string clientId, string clientSecret);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/GetAllBeneficiariesByCrNumber", ReplyAction="http://tempuri.org/IEFileService/GetAllBeneficiariesByCrNumberResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<URCP.ServicesRepository.eFileService.EFileServiceDelegationDetails>> GetAllBeneficiariesByCrNumberAsync(string crNumber, string clientId, string clientSecret);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/SendSMS", ReplyAction="http://tempuri.org/IEFileService/SendSMSResponse")]
        bool SendSMS(string clientId, string otp, string nid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/SendSMS", ReplyAction="http://tempuri.org/IEFileService/SendSMSResponse")]
        System.Threading.Tasks.Task<bool> SendSMSAsync(string clientId, string otp, string nid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/GetBlackListedServicesByServiceID", ReplyAction="http://tempuri.org/IEFileService/GetBlackListedServicesByServiceIDResponse")]
        System.Collections.Generic.List<URCP.ServicesRepository.eFileService.EFileServiceBlackListed> GetBlackListedServicesByServiceID(string nid, string clientId, string serviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/GetBlackListedServicesByServiceID", ReplyAction="http://tempuri.org/IEFileService/GetBlackListedServicesByServiceIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<URCP.ServicesRepository.eFileService.EFileServiceBlackListed>> GetBlackListedServicesByServiceIDAsync(string nid, string clientId, string serviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/GetRolesByClientID", ReplyAction="http://tempuri.org/IEFileService/GetRolesByClientIDResponse")]
        System.Collections.Generic.List<URCP.ServicesRepository.eFileService.EFileServiceRole> GetRolesByClientID(string clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/GetRolesByClientID", ReplyAction="http://tempuri.org/IEFileService/GetRolesByClientIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<URCP.ServicesRepository.eFileService.EFileServiceRole>> GetRolesByClientIDAsync(string clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/GetUserRoles", ReplyAction="http://tempuri.org/IEFileService/GetUserRolesResponse")]
        System.Collections.Generic.List<URCP.ServicesRepository.eFileService.EFileServiceRole> GetUserRoles(string nid, string clientId, string childClientId, string serviceId, string crNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/GetUserRoles", ReplyAction="http://tempuri.org/IEFileService/GetUserRolesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<URCP.ServicesRepository.eFileService.EFileServiceRole>> GetUserRolesAsync(string nid, string clientId, string childClientId, string serviceId, string crNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/GetCountries", ReplyAction="http://tempuri.org/IEFileService/GetCountriesResponse")]
        System.Collections.Generic.List<URCP.ServicesRepository.eFileService.EFileServiceCountry> GetCountries(string clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/GetCountries", ReplyAction="http://tempuri.org/IEFileService/GetCountriesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<URCP.ServicesRepository.eFileService.EFileServiceCountry>> GetCountriesAsync(string clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/GetCities", ReplyAction="http://tempuri.org/IEFileService/GetCitiesResponse")]
        System.Collections.Generic.List<URCP.ServicesRepository.eFileService.EFileServiceCity> GetCities(string clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/GetCities", ReplyAction="http://tempuri.org/IEFileService/GetCitiesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<URCP.ServicesRepository.eFileService.EFileServiceCity>> GetCitiesAsync(string clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/GetDistricts", ReplyAction="http://tempuri.org/IEFileService/GetDistrictsResponse")]
        System.Collections.Generic.List<URCP.ServicesRepository.eFileService.EFileServiceDistrict> GetDistricts(string clientId, int cityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/GetDistricts", ReplyAction="http://tempuri.org/IEFileService/GetDistrictsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<URCP.ServicesRepository.eFileService.EFileServiceDistrict>> GetDistrictsAsync(string clientId, int cityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/Logout", ReplyAction="http://tempuri.org/IEFileService/LogoutResponse")]
        bool Logout(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/Logout", ReplyAction="http://tempuri.org/IEFileService/LogoutResponse")]
        System.Threading.Tasks.Task<bool> LogoutAsync(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/Login", ReplyAction="http://tempuri.org/IEFileService/LoginResponse")]
        string Login(string clientId, string clientSecret, string NID, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/Login", ReplyAction="http://tempuri.org/IEFileService/LoginResponse")]
        System.Threading.Tasks.Task<string> LoginAsync(string clientId, string clientSecret, string NID, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/PasswordRecovery", ReplyAction="http://tempuri.org/IEFileService/PasswordRecoveryResponse")]
        bool PasswordRecovery(string nid, string clientId, string clientPassword, URCP.ServicesRepository.eFileService.PasswordRecoveryWay passwordRecoveryWay);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/PasswordRecovery", ReplyAction="http://tempuri.org/IEFileService/PasswordRecoveryResponse")]
        System.Threading.Tasks.Task<bool> PasswordRecoveryAsync(string nid, string clientId, string clientPassword, URCP.ServicesRepository.eFileService.PasswordRecoveryWay passwordRecoveryWay);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/ChangePersonPassword", ReplyAction="http://tempuri.org/IEFileService/ChangePersonPasswordResponse")]
        bool ChangePersonPassword(URCP.ServicesRepository.eFileService.AccessTokenModel accessToken, URCP.ServicesRepository.eFileService.ChangePasswordModel changePassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/ChangePersonPassword", ReplyAction="http://tempuri.org/IEFileService/ChangePersonPasswordResponse")]
        System.Threading.Tasks.Task<bool> ChangePersonPasswordAsync(URCP.ServicesRepository.eFileService.AccessTokenModel accessToken, URCP.ServicesRepository.eFileService.ChangePasswordModel changePassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/ChangePersonPasswordByAccessToken", ReplyAction="http://tempuri.org/IEFileService/ChangePersonPasswordByAccessTokenResponse")]
        bool ChangePersonPasswordByAccessToken(string userAccessToken, string oldPassword, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/ChangePersonPasswordByAccessToken", ReplyAction="http://tempuri.org/IEFileService/ChangePersonPasswordByAccessTokenResponse")]
        System.Threading.Tasks.Task<bool> ChangePersonPasswordByAccessTokenAsync(string userAccessToken, string oldPassword, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/AuthenticateByAbsherMobile", ReplyAction="http://tempuri.org/IEFileService/AuthenticateByAbsherMobileResponse")]
        bool AuthenticateByAbsherMobile(string userName, string clientId, string clientPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFileService/AuthenticateByAbsherMobile", ReplyAction="http://tempuri.org/IEFileService/AuthenticateByAbsherMobileResponse")]
        System.Threading.Tasks.Task<bool> AuthenticateByAbsherMobileAsync(string userName, string clientId, string clientPassword);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEFileServiceChannel : URCP.ServicesRepository.eFileService.IEFileService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EFileServiceClient : System.ServiceModel.ClientBase<URCP.ServicesRepository.eFileService.IEFileService>, URCP.ServicesRepository.eFileService.IEFileService {
        
        public EFileServiceClient() {
        }
        
        public EFileServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EFileServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EFileServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EFileServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public URCP.ServicesRepository.eFileService.EFileServicePerson GetPersonByUserIDandClientID(string userId, string clientId, string clientPassword) {
            return base.Channel.GetPersonByUserIDandClientID(userId, clientId, clientPassword);
        }
        
        public System.Threading.Tasks.Task<URCP.ServicesRepository.eFileService.EFileServicePerson> GetPersonByUserIDandClientIDAsync(string userId, string clientId, string clientPassword) {
            return base.Channel.GetPersonByUserIDandClientIDAsync(userId, clientId, clientPassword);
        }
        
        public URCP.ServicesRepository.eFileService.EFileServicePerson GetPersonByUserID(string userId) {
            return base.Channel.GetPersonByUserID(userId);
        }
        
        public System.Threading.Tasks.Task<URCP.ServicesRepository.eFileService.EFileServicePerson> GetPersonByUserIDAsync(string userId) {
            return base.Channel.GetPersonByUserIDAsync(userId);
        }
        
        public URCP.ServicesRepository.eFileService.EFileServicePerson GetPersonByNID(string nid, string clientId, string clientPassword) {
            return base.Channel.GetPersonByNID(nid, clientId, clientPassword);
        }
        
        public System.Threading.Tasks.Task<URCP.ServicesRepository.eFileService.EFileServicePerson> GetPersonByNIDAsync(string nid, string clientId, string clientPassword) {
            return base.Channel.GetPersonByNIDAsync(nid, clientId, clientPassword);
        }
        
        public URCP.ServicesRepository.eFileService.EFileServicePerson GetPersonByFIN(string nid, string clientId, string clientPassword) {
            return base.Channel.GetPersonByFIN(nid, clientId, clientPassword);
        }
        
        public System.Threading.Tasks.Task<URCP.ServicesRepository.eFileService.EFileServicePerson> GetPersonByFINAsync(string nid, string clientId, string clientPassword) {
            return base.Channel.GetPersonByFINAsync(nid, clientId, clientPassword);
        }
        
        public URCP.ServicesRepository.eFileService.EFileServicePerson CheckPersonStatus(string nid, string clientId, string clientPassword) {
            return base.Channel.CheckPersonStatus(nid, clientId, clientPassword);
        }
        
        public System.Threading.Tasks.Task<URCP.ServicesRepository.eFileService.EFileServicePerson> CheckPersonStatusAsync(string nid, string clientId, string clientPassword) {
            return base.Channel.CheckPersonStatusAsync(nid, clientId, clientPassword);
        }
        
        public URCP.ServicesRepository.eFileService.EFileServicePerson GetPerson(string nid) {
            return base.Channel.GetPerson(nid);
        }
        
        public System.Threading.Tasks.Task<URCP.ServicesRepository.eFileService.EFileServicePerson> GetPersonAsync(string nid) {
            return base.Channel.GetPersonAsync(nid);
        }
        
        public URCP.ServicesRepository.eFileService.EFileServiceContactOfficer GetContactOfficerInfo(string userAccessToken, string clientId, string clientPassword) {
            return base.Channel.GetContactOfficerInfo(userAccessToken, clientId, clientPassword);
        }
        
        public System.Threading.Tasks.Task<URCP.ServicesRepository.eFileService.EFileServiceContactOfficer> GetContactOfficerInfoAsync(string userAccessToken, string clientId, string clientPassword) {
            return base.Channel.GetContactOfficerInfoAsync(userAccessToken, clientId, clientPassword);
        }
        
        public URCP.ServicesRepository.eFileService.EFileServiceAddress GetPersonAddressByNID(string nid, string clientId, string clientPassword) {
            return base.Channel.GetPersonAddressByNID(nid, clientId, clientPassword);
        }
        
        public System.Threading.Tasks.Task<URCP.ServicesRepository.eFileService.EFileServiceAddress> GetPersonAddressByNIDAsync(string nid, string clientId, string clientPassword) {
            return base.Channel.GetPersonAddressByNIDAsync(nid, clientId, clientPassword);
        }
        
        public URCP.ServicesRepository.eFileService.AccessTokenModel Authenticated(string clientId, string clientPassword, string NID, string password) {
            return base.Channel.Authenticated(clientId, clientPassword, NID, password);
        }
        
        public System.Threading.Tasks.Task<URCP.ServicesRepository.eFileService.AccessTokenModel> AuthenticatedAsync(string clientId, string clientPassword, string NID, string password) {
            return base.Channel.AuthenticatedAsync(clientId, clientPassword, NID, password);
        }
        
        public string GetUsernameByAccessToken(string userAccessToken) {
            return base.Channel.GetUsernameByAccessToken(userAccessToken);
        }
        
        public System.Threading.Tasks.Task<string> GetUsernameByAccessTokenAsync(string userAccessToken) {
            return base.Channel.GetUsernameByAccessTokenAsync(userAccessToken);
        }
        
        public bool CheckToken(URCP.ServicesRepository.eFileService.AccessTokenModel accessToken) {
            return base.Channel.CheckToken(accessToken);
        }
        
        public System.Threading.Tasks.Task<bool> CheckTokenAsync(URCP.ServicesRepository.eFileService.AccessTokenModel accessToken) {
            return base.Channel.CheckTokenAsync(accessToken);
        }
        
        public bool CheckUserToken(string userAccessToken, string clientId, string clientPassword) {
            return base.Channel.CheckUserToken(userAccessToken, clientId, clientPassword);
        }
        
        public System.Threading.Tasks.Task<bool> CheckUserTokenAsync(string userAccessToken, string clientId, string clientPassword) {
            return base.Channel.CheckUserTokenAsync(userAccessToken, clientId, clientPassword);
        }
        
        public bool IsAuthenticated(string userAccessToken, string clientId) {
            return base.Channel.IsAuthenticated(userAccessToken, clientId);
        }
        
        public System.Threading.Tasks.Task<bool> IsAuthenticatedAsync(string userAccessToken, string clientId) {
            return base.Channel.IsAuthenticatedAsync(userAccessToken, clientId);
        }
        
        public bool UpdatePersonInfo(URCP.ServicesRepository.eFileService.AccessTokenModel accessToken, URCP.ServicesRepository.eFileService.EFileServicePersonProfile personProfile) {
            return base.Channel.UpdatePersonInfo(accessToken, personProfile);
        }
        
        public System.Threading.Tasks.Task<bool> UpdatePersonInfoAsync(URCP.ServicesRepository.eFileService.AccessTokenModel accessToken, URCP.ServicesRepository.eFileService.EFileServicePersonProfile personProfile) {
            return base.Channel.UpdatePersonInfoAsync(accessToken, personProfile);
        }
        
        public bool UpdatePersonAddress(URCP.ServicesRepository.eFileService.AccessTokenModel accessToken, URCP.ServicesRepository.eFileService.EFileServicePersonAddress personAddress) {
            return base.Channel.UpdatePersonAddress(accessToken, personAddress);
        }
        
        public System.Threading.Tasks.Task<bool> UpdatePersonAddressAsync(URCP.ServicesRepository.eFileService.AccessTokenModel accessToken, URCP.ServicesRepository.eFileService.EFileServicePersonAddress personAddress) {
            return base.Channel.UpdatePersonAddressAsync(accessToken, personAddress);
        }
        
        public System.Collections.Generic.List<URCP.ServicesRepository.eFileService.EFileServiceDelegated> GetDelegatedReferencesByServiceID(string nid, string clientId, string childClientId, string serviceId, string crNumber) {
            return base.Channel.GetDelegatedReferencesByServiceID(nid, clientId, childClientId, serviceId, crNumber);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<URCP.ServicesRepository.eFileService.EFileServiceDelegated>> GetDelegatedReferencesByServiceIDAsync(string nid, string clientId, string childClientId, string serviceId, string crNumber) {
            return base.Channel.GetDelegatedReferencesByServiceIDAsync(nid, clientId, childClientId, serviceId, crNumber);
        }
        
        public System.Collections.Generic.List<URCP.ServicesRepository.eFileService.EFileServiceDelegated> GetDelegatedReferences(string nid, string clientId, string clientSecret, string delegatorNID, string crNumber) {
            return base.Channel.GetDelegatedReferences(nid, clientId, clientSecret, delegatorNID, crNumber);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<URCP.ServicesRepository.eFileService.EFileServiceDelegated>> GetDelegatedReferencesAsync(string nid, string clientId, string clientSecret, string delegatorNID, string crNumber) {
            return base.Channel.GetDelegatedReferencesAsync(nid, clientId, clientSecret, delegatorNID, crNumber);
        }
        
        public URCP.ServicesRepository.eFileService.EFileServiceDelegation GetAllDelegationInfo(string nid, string clientId, string clientSecret) {
            return base.Channel.GetAllDelegationInfo(nid, clientId, clientSecret);
        }
        
        public System.Threading.Tasks.Task<URCP.ServicesRepository.eFileService.EFileServiceDelegation> GetAllDelegationInfoAsync(string nid, string clientId, string clientSecret) {
            return base.Channel.GetAllDelegationInfoAsync(nid, clientId, clientSecret);
        }
        
        public URCP.ServicesRepository.eFileService.EFileServiceDelegation GetAllDelegationInfoByCrNumber(string nid, string clientId, string clientSecret, string crNumber) {
            return base.Channel.GetAllDelegationInfoByCrNumber(nid, clientId, clientSecret, crNumber);
        }
        
        public System.Threading.Tasks.Task<URCP.ServicesRepository.eFileService.EFileServiceDelegation> GetAllDelegationInfoByCrNumberAsync(string nid, string clientId, string clientSecret, string crNumber) {
            return base.Channel.GetAllDelegationInfoByCrNumberAsync(nid, clientId, clientSecret, crNumber);
        }
        
        public System.Collections.Generic.List<URCP.ServicesRepository.eFileService.EFileServiceDelegationDetails> GetListOfAllDelegationsInfo(string nid, string clientId, string clientSecret) {
            return base.Channel.GetListOfAllDelegationsInfo(nid, clientId, clientSecret);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<URCP.ServicesRepository.eFileService.EFileServiceDelegationDetails>> GetListOfAllDelegationsInfoAsync(string nid, string clientId, string clientSecret) {
            return base.Channel.GetListOfAllDelegationsInfoAsync(nid, clientId, clientSecret);
        }
        
        public System.Collections.Generic.List<URCP.ServicesRepository.eFileService.EFileServiceDelegationDetails> GetAllBeneficiariesByCrNumber(string crNumber, string clientId, string clientSecret) {
            return base.Channel.GetAllBeneficiariesByCrNumber(crNumber, clientId, clientSecret);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<URCP.ServicesRepository.eFileService.EFileServiceDelegationDetails>> GetAllBeneficiariesByCrNumberAsync(string crNumber, string clientId, string clientSecret) {
            return base.Channel.GetAllBeneficiariesByCrNumberAsync(crNumber, clientId, clientSecret);
        }
        
        public bool SendSMS(string clientId, string otp, string nid) {
            return base.Channel.SendSMS(clientId, otp, nid);
        }
        
        public System.Threading.Tasks.Task<bool> SendSMSAsync(string clientId, string otp, string nid) {
            return base.Channel.SendSMSAsync(clientId, otp, nid);
        }
        
        public System.Collections.Generic.List<URCP.ServicesRepository.eFileService.EFileServiceBlackListed> GetBlackListedServicesByServiceID(string nid, string clientId, string serviceId) {
            return base.Channel.GetBlackListedServicesByServiceID(nid, clientId, serviceId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<URCP.ServicesRepository.eFileService.EFileServiceBlackListed>> GetBlackListedServicesByServiceIDAsync(string nid, string clientId, string serviceId) {
            return base.Channel.GetBlackListedServicesByServiceIDAsync(nid, clientId, serviceId);
        }
        
        public System.Collections.Generic.List<URCP.ServicesRepository.eFileService.EFileServiceRole> GetRolesByClientID(string clientId) {
            return base.Channel.GetRolesByClientID(clientId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<URCP.ServicesRepository.eFileService.EFileServiceRole>> GetRolesByClientIDAsync(string clientId) {
            return base.Channel.GetRolesByClientIDAsync(clientId);
        }
        
        public System.Collections.Generic.List<URCP.ServicesRepository.eFileService.EFileServiceRole> GetUserRoles(string nid, string clientId, string childClientId, string serviceId, string crNumber) {
            return base.Channel.GetUserRoles(nid, clientId, childClientId, serviceId, crNumber);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<URCP.ServicesRepository.eFileService.EFileServiceRole>> GetUserRolesAsync(string nid, string clientId, string childClientId, string serviceId, string crNumber) {
            return base.Channel.GetUserRolesAsync(nid, clientId, childClientId, serviceId, crNumber);
        }
        
        public System.Collections.Generic.List<URCP.ServicesRepository.eFileService.EFileServiceCountry> GetCountries(string clientId) {
            return base.Channel.GetCountries(clientId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<URCP.ServicesRepository.eFileService.EFileServiceCountry>> GetCountriesAsync(string clientId) {
            return base.Channel.GetCountriesAsync(clientId);
        }
        
        public System.Collections.Generic.List<URCP.ServicesRepository.eFileService.EFileServiceCity> GetCities(string clientId) {
            return base.Channel.GetCities(clientId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<URCP.ServicesRepository.eFileService.EFileServiceCity>> GetCitiesAsync(string clientId) {
            return base.Channel.GetCitiesAsync(clientId);
        }
        
        public System.Collections.Generic.List<URCP.ServicesRepository.eFileService.EFileServiceDistrict> GetDistricts(string clientId, int cityId) {
            return base.Channel.GetDistricts(clientId, cityId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<URCP.ServicesRepository.eFileService.EFileServiceDistrict>> GetDistrictsAsync(string clientId, int cityId) {
            return base.Channel.GetDistrictsAsync(clientId, cityId);
        }
        
        public bool Logout(string accessToken) {
            return base.Channel.Logout(accessToken);
        }
        
        public System.Threading.Tasks.Task<bool> LogoutAsync(string accessToken) {
            return base.Channel.LogoutAsync(accessToken);
        }
        
        public string Login(string clientId, string clientSecret, string NID, string password) {
            return base.Channel.Login(clientId, clientSecret, NID, password);
        }
        
        public System.Threading.Tasks.Task<string> LoginAsync(string clientId, string clientSecret, string NID, string password) {
            return base.Channel.LoginAsync(clientId, clientSecret, NID, password);
        }
        
        public bool PasswordRecovery(string nid, string clientId, string clientPassword, URCP.ServicesRepository.eFileService.PasswordRecoveryWay passwordRecoveryWay) {
            return base.Channel.PasswordRecovery(nid, clientId, clientPassword, passwordRecoveryWay);
        }
        
        public System.Threading.Tasks.Task<bool> PasswordRecoveryAsync(string nid, string clientId, string clientPassword, URCP.ServicesRepository.eFileService.PasswordRecoveryWay passwordRecoveryWay) {
            return base.Channel.PasswordRecoveryAsync(nid, clientId, clientPassword, passwordRecoveryWay);
        }
        
        public bool ChangePersonPassword(URCP.ServicesRepository.eFileService.AccessTokenModel accessToken, URCP.ServicesRepository.eFileService.ChangePasswordModel changePassword) {
            return base.Channel.ChangePersonPassword(accessToken, changePassword);
        }
        
        public System.Threading.Tasks.Task<bool> ChangePersonPasswordAsync(URCP.ServicesRepository.eFileService.AccessTokenModel accessToken, URCP.ServicesRepository.eFileService.ChangePasswordModel changePassword) {
            return base.Channel.ChangePersonPasswordAsync(accessToken, changePassword);
        }
        
        public bool ChangePersonPasswordByAccessToken(string userAccessToken, string oldPassword, string newPassword) {
            return base.Channel.ChangePersonPasswordByAccessToken(userAccessToken, oldPassword, newPassword);
        }
        
        public System.Threading.Tasks.Task<bool> ChangePersonPasswordByAccessTokenAsync(string userAccessToken, string oldPassword, string newPassword) {
            return base.Channel.ChangePersonPasswordByAccessTokenAsync(userAccessToken, oldPassword, newPassword);
        }
        
        public bool AuthenticateByAbsherMobile(string userName, string clientId, string clientPassword) {
            return base.Channel.AuthenticateByAbsherMobile(userName, clientId, clientPassword);
        }
        
        public System.Threading.Tasks.Task<bool> AuthenticateByAbsherMobileAsync(string userName, string clientId, string clientPassword) {
            return base.Channel.AuthenticateByAbsherMobileAsync(userName, clientId, clientPassword);
        }
    }
}
